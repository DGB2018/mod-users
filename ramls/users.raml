#%RAML 0.8
title: Users
version: v1
baseUri: http://github.com/org/folio/mod-users

documentation:
  - title: mod-users API
    content: This documents the API calls that can be made to query and manage users of the system

schemas:
  - userdata: !include ../schemas/userdata.json
  - userdataCollection: !include ../schemas/userdataCollection.json
  - userdataMultiple: !include ../schemas/userdataMultiple.json
  - userdataMultipleSummary: !include ../schemas/userdataMultipleSummary.json

traits:
  - secured: !include https://raw.githubusercontent.com/folio-org/raml/master/traits/auth.raml
  - orderable: !include https://raw.githubusercontent.com/folio-org/raml/master/traits/orderable.raml
  - pageable:  !include https://raw.githubusercontent.com/folio-org/raml/master/traits/pageable.raml
  - searchable: !include https://raw.githubusercontent.com/folio-org/raml/master/traits/searchable.raml
  - language: !include https://raw.githubusercontent.com/folio-org/raml/master/traits/language.raml

resourceTypes:
  - collection: !include https://raw.githubusercontent.com/folio-org/raml/master/rtypes/collection.raml
  - collection-item: !include https://raw.githubusercontent.com/folio-org/raml/master/rtypes/item-collection.raml
  - get-only: !include https://raw.githubusercontent.com/folio-org/raml/master/rtypes/get-only.raml
  - post-empty-body: !include https://raw.githubusercontent.com/folio-org/raml/master/rtypes/post-empty-body.raml

/users:
  type:
    collection:
      exampleCollection: !include ../examples/user_collection.sample
      exampleItem: !include ../examples/user.sample
      schemaCollection: userdataCollection
      schemaItem: userdata
  get:
    is: [
    searchable: {description: "with valid searchable fields", example: "[\"user.active\", \"true\", \"=\"]"},
    orderable: {fieldsList: "field A, field B"},
    pageable
    ]
    description: Return a list of users
  post:
    description: Create a user
  /{userId}:
    type:
      collection-item:
        exampleItem: !include ../examples/user.sample
        schema: userdata
    get:
      description: Get a single user
  /multi:
    post:
      description: Upload several <<resourcePathName|!singularize>> items.
      body:
          application/json:
            schema: userdataMultiple
      responses:
        201:
          body:
            application/json:
              schema: userdataMultipleSummary
        400:
          body:
            text/plain:
        500:
          body:
            text/plain:
